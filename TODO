General
=======

- Figure out why my insert-mode underline keymap doesn't work on my macbook
- Some kind of way to mark and move blocks of text
    - it would be a lot like `"ay` or `"ad` then `"aP`, but I don't like that
      workflow, because it is a lot of keystrokes and remembering which register
      can be used. Moving also commits to the move, and can sometimes be lost,
      meaning a bunch of undoing, and jumps around the document.
    - something like
        1. Select the text in visual mode
        2. `gy` stores the selection
        3. navigate to the destination
        4. `gp` or `gm` copies or moves the stored selection
        5. Nothing happens if 4 is not done.
LaTeX
=====

I'm starting to see ways that Treesitter + Telescope can help with my latex
writing. I have started implementing these in the `jladan/nvim-latex` plugin.

Some additional things that will help:
- text objects for navigating/modifying things
    - equations (not just environments, but each line in an `align` as well)
    - environment contents
    - surround for environments
- synctex navigation for skim and zathura
- snippets
    - table environment?

Telescope
=========

Set up telescope functions with the <leader>t lead-in
- [ ] s : grep search
- [ ] add hotkey to open in split or tab (maybe <C-v>, <C-h>, <C-t> )
    - this seems to be done already, with these keys
- [ ] allow file creation from the find_files builtin

- [ ] Adjust the layout rules so that there are always a few results shown in that pane

LSP
===

- [ ] figure out why lua doesn't work right
- [ ] add hotkeys for some of the telescope lsp builtins

Diary
=====

I want to set up a nice diary flow. This would include:

- [X] Telescope picker to find/select files in the $diary directory
- [X] Shell script/alias to quickly create/edit a diary file
- [ ] Markdown folding (via tree-sitter?)

Color
=====

Probably simplify my colorscheme file. It feels too gargantuan to manage.

Git workflow
------------

I find that staging through status is cludgy, especially when there are a lot of
untracked files in my worktree. Instead, I have started to do:

:Git add %
:Git commit -m "message"

Some shortcut sequences for those could be very useful

Tree-Sitter
===========

I mostly installed this for folding, but the markdown document tree isn't
arranged well. This is because headings do not contain the following contents
in their tree.

To figure it out:
  - Can we change the grammar to add a tree structure to the document?
    - This is the way the latex parser works, and it folds really well
  - Possibly use a custom folding function and queries to do it
  - treesitter-highlight seems a bit sketchy

NVIM Development
================

I found that repeatedly typing in `:lua print(___)` over and over in the vim
command prompt is a pain. I'd like to be able to enter lua code directly.
    - Seems like nvim-luadev will do it

    - [ ] Configure maps for nvim-luadev 

Really neat would be stuff like "run selection" and log the output to a scratch
buffer.
    - nvim-luadev does this with <Plug>(Luadev-Run)

Also, some kind of REPL is always useful.
    - nvim-luapad was close to this but re-evaluates the buffer too much

For actually printing tables, `vim.inspect()` is useful

vim:filetype=markdown
